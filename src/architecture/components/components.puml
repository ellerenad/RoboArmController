@startuml

package "Sensor Framework" {
    component "HandDataProducer" as HandDataProducer
}

interface "\nWebSocket" as WebSocketServer
HandDataProducer - WebSocketServer

package "RoboArmController" {
    component "LeapMotionWebSocketListener" as WebSocketClient
    component "DataParser" as DataParser
    component "TrackingFrameProcessor" as TrackingFrameProcessor
    component "SimulationGateway" as SimulationGateway

    WebSocketServer )- WebSocketClient
    WebSocketClient -> DataParser: calls
    DataParser --> TrackingFrameProcessor: calls
    TrackingFrameProcessor -> SimulationGateway: calls
}

interface "TCP\nSocket" as SocketServer
SimulationGateway -( SocketServer

package "Tensorflow Framework" {
    component "Tensorflow Framework" as MLFramework
    TrackingFrameProcessor -> MLFramework: uses

}

package "Training Module" {
    component "RoboArmControllerTraining" as ModelGenerator
    ModelGenerator -> MLFramework: uses
}

interface "Files" as Files

Files -- ModelGenerator
TrackingFrameProcessor -- Files


package RoboArmSimulation {
    component "Server" as InstructionServer
    component "Gazebo Simulation" as Simulation
    component "RoboArmPlugin" as ControllerPlugin

    InstructionServer -> ControllerPlugin: calls
    ControllerPlugin -> Simulation: controls
    SocketServer - InstructionServer
}



@enduml